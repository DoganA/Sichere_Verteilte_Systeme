from StringIO import StringIO
import os
currentDirectory = os.getcwd()

cipherText = open(currentDirectory + "//sample.txt_enc", "r+");
clearText = open(currentDirectory + "//sample.txt");

def resolve(ciphertext, allWords):
    solutions = list()
    translationTable = dict()

    def have_word(prefix):
        return any(w.startswith(prefix) for w in allWords)

    def process(pos, currentWord):
        if pos == len(ciphertext):
            # found one solution
            plaintext = "".join(" " if c == " " else translationTable[c] for c in ciphertext)
            solutions.append(plaintext)
            return

        c = ciphertext[pos]

        if c == " ":
            if currentWord in allWords:
                process(pos+1, "")

        elif c in translationTable:
            # just check that a proper plaintext word exist
            currentWord += translationTable[c]
            if have_word(currentWord):
                process(pos+1, currentWord)

        else:
            # figure out a letter that could pass
            for letter in "abcdefghijklmnopqrstuvwxyz":
                if letter in translationTable.values():
                    # letter already taken
                    continue

                if have_word(currentWord+letter):
                    translationTable[c] = letter
                    process(pos+1, currentWord+letter)
                    del translationTable[c]

    process(0, "")
    return solutions
